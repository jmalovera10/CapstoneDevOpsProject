Description: >
  Juan Manuel Lovera, deploy a eks cluster

Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String
    Default: UdacityCapstone

Resources:
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for the EKS Cluster
      GroupName: EKSSecurityGroup
      SecurityGroupEgress:
        - IpProtocol: -1
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      VpcId:
        Fn::ImportValue: UdacityCapstone-VPCID

  EKSRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - eks.amazonaws.com
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy

  EKSCluster:
    Type: AWS::EKS::Cluster
    Properties:
      Name: !Sub ${EnvironmentName}-cluster
      ResourcesVpcConfig:
        SecurityGroupIds:
          - !Ref SecurityGroup
        SubnetIds:
          - Fn::ImportValue: UdacityCapstone-PUB1-SN
          - Fn::ImportValue: UdacityCapstone-PUB2-SN
      RoleArn: !GetAtt EKSRole.Arn

  EKSNodeGroupRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
        - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly

  EKSNodeGroup:
    Type: AWS::EKS::Nodegroup
    Properties: 
      AmiType: AL2_x86_64
      ClusterName: !Ref EKSCluster
      ForceUpdateEnabled: true
      InstanceTypes: 
        - t3.small
      NodegroupName: !Sub ${EnvironmentName}-group
      NodeRole: !GetAtt EKSNodeGroupRole.Arn
      RemoteAccess:
        Ec2SshKey: udacity
      Subnets: 
        - Fn::ImportValue: UdacityCapstone-PUB1-SN
      
Outputs:
  EKSClusterName:
    Description: The cluster name
    Value: !Ref EKSCluster
    Export:
      Name: !Sub "eks-cluster-name"

  EKSClusterName:
    Description: The cluster arn
    Value: !GetAtt EKSCluster.Arn
    Export:
      Name: !Sub "eks-cluster-arn"
